{
  "files": [
    "certora/harness/scUSDCv2.sol:scUSDCv2",
    "lib/solmate/src/tokens/WETH.sol:WETH",
    "certora/mocks/BalancerVault.sol:BalancerVault",
    "certora/mocks/PriceConverter.sol:PriceConverter",
    "certora/mocks/Swapper.sol:Swapper",
    "certora/harness/scWETH.sol:scWETH",
    "test/mocks/MockUSDC.sol:MockUSDC",
    "certora/mocks/AaveUsdcPool.sol:AaveUsdcPool",
    "certora/mocks/AggregatorV3.sol:AggregatorV3",
    "test/mocks/uniswap/MockSwapRouter.sol:MockSwapRouter",
    "test/mocks/curve/MockCurvePool.sol:MockCurvePool",
    "certora/mocks/AaveV3ScUsdcAdapter.sol:AaveV3ScUsdcAdapter",
    "test/mocks/aave-v3/MockAavePool.sol:MockAavePool",
    "test/mocks/aave-v3/MockAavePoolDataProvider.sol:MockAavePoolDataProvider",
    "test/mocks/aave-v3/MockVarDebtWETH.sol:MockVarDebtWETH",
    "test/mocks/aave-v3/MockAUsdc.sol:MockAUsdc",
    "test/mocks/aave-v3/MockAwstETH.sol:MockAwstETH",
    "test/mocks/chainlink/MockChainlinkPriceFeed.sol:MockChainlinkPriceFeed",
    "test/mocks/MockWETH.sol:MockWETH",
    "certora/mocks/DUsdc.sol:DUsdc",
    "test/mocks/lido/MockWstETH.sol:MockWstETH",
    "test/mocks/lido/MockStETH.sol:MockStETH"
  ],
  "verify": "scUSDCv2:certora/specs/scUSDCv2.spec",
  "solc": "solc",
  "link": [
    "PriceConverter:wstETH=MockWstETH",
    "PriceConverter:usdcToEthPriceFeed=MockChainlinkPriceFeed",
    "PriceConverter:stEThToEthPriceFeed=MockChainlinkPriceFeed",
    "Swapper:swapRouter=MockSwapRouter",
    "Swapper:curvePool=MockCurvePool",
    "Swapper:weth=WETH",
    "Swapper:stEth=MockStETH",
    "Swapper:wstEth=MockWstETH",
    "scWETH:asset=WETH",
    "scWETH:wstETH=MockWstETH",
    "scWETH:aavePool=MockAavePool",
    "scWETH:aToken=MockAwstETH",
    "scWETH:variableDebtToken=MockVarDebtWETH",
    "scWETH:curvePool=MockCurvePool",
    "scWETH:stEth=MockStETH",
    "scWETH:stEThToEthPriceFeed=MockChainlinkPriceFeed",
    "scWETH:balancerVault=BalancerVault",
    "MockCurvePool:stEth=MockStETH",
    "AaveV3ScUsdcAdapter:usdc=MockUSDC",
    "AaveV3ScUsdcAdapter:weth=WETH",
    "AaveV3ScUsdcAdapter:pool=MockAavePool",
    "AaveV3ScUsdcAdapter:aaveV3PoolDataProvider=MockAavePoolDataProvider",
    "AaveV3ScUsdcAdapter:aUsdc=MockAUsdc",
    "AaveV3ScUsdcAdapter:dWeth=MockVarDebtWETH",
    "MockWstETH:stEth=MockStETH",
    "MockAUsdc:aavePool=MockAavePool",
    "MockAUsdc:mockUsdc=MockUSDC",
    "MockVarDebtWETH:aavePool=MockAavePool",
    "MockAavePool:usdc=MockUSDC",
    "MockAavePool:wstEth=MockWETH",
    "MockAwstETH:aavePool=MockAavePool",
    "scUSDCv2:asset=MockUSDC",
    "scUSDCv2:weth=WETH",
    "scUSDCv2:scWETH=scWETH",
    "scUSDCv2:priceConverter=PriceConverter",
    "scUSDCv2:balancerVault=BalancerVault",
    "scUSDCv2:swapper=Swapper"
  ],
  "msg": "scUSDCv2 rules",
  "optimistic_loop": true,
  "smt_timeout": "7200",
  "disable_local_typechecking": false,
  "optimistic_fallback": true
}