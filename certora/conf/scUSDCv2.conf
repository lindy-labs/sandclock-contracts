{
  "files": [
    "certora/harness/scUSDCv2.sol:scUSDCv2",
    "certora/harness/scWETHv2.sol:scWETHv2",
    "certora/mocks/USDC.sol:USDC",
    "certora/mocks/AaveUsdcPool.sol:AaveUsdcPool",
    "certora/mocks/AggregatorV3.sol:AggregatorV3",
    "lib/solmate/src/tokens/WETH.sol:WETH",
    "certora/mocks/PriceConverter.sol:PriceConverter",
    "certora/mocks/BalancerVault.sol:BalancerVault",
    "certora/mocks/USDC.sol:USDC",
    "certora/mocks/Swapper.sol:Swapper",
    "certora/mocks/SwapRouter.sol:SwapRouter",
    "test/mocks/curve/MockCurvePool.sol:MockCurvePool",
    "certora/mocks/AaveV2ScUsdcAdapter.sol:AaveV2ScUsdcAdapter",
    "certora/mocks/MockAavePoolDataProvider.sol:MockAavePoolDataProvider",
    "certora/mocks/AavePool.sol:AavePool",
    "certora/mocks/DUsdc.sol:DUsdc",
    "test/mocks/lido/MockWstETH.sol:MockWstETH",
    "test/mocks/lido/MockStETH.sol:MockStETH",
    "certora/mocks/AUsdc.sol:AUsdc",
    "certora/mocks/DWethv2.sol:DWethv2"
  ],
  "verify": "scUSDCv2:certora/specs/scUSDCv2.spec",
  "solc": "solc",
  "link": [
    "scWETHv2:asset=WETH",
    "scWETHv2:wstETH=MockWstETH",
    "scWETHv2:priceConverter=PriceConverter",
    "scWETHv2:balancerVault=BalancerVault",
    "scWETHv2:swapper=Swapper",
    "PriceConverter:wstETH=MockWstETH",
    "PriceConverter:usdcToEthPriceFeed=AggregatorV3",
    "PriceConverter:stEThToEthPriceFeed=AggregatorV3",
    "Swapper:swapRouter=SwapRouter",
    "Swapper:curvePool=MockCurvePool",
    "Swapper:weth=WETH",
    "Swapper:stEth=MockStETH",
    "Swapper:wstEth=MockWstETH",
    "MockCurvePool:stEth=MockStETH",
    "AaveV2ScUsdcAdapter:usdc=USDC",
    "AaveV2ScUsdcAdapter:weth=WETH",
    "AaveV2ScUsdcAdapter:pool=AavePool",
    "AaveV2ScUsdcAdapter:aaveV2ProtocolDataProvider=MockAavePoolDataProvider",
    "AaveV2ScUsdcAdapter:aUsdc=USDC",
    "AaveV2ScUsdcAdapter:dWeth=DWethv2",
    "AavePool:aToken=AUsdc",
    "AavePool:variableDebtToken=DUsdc",
    "MockWstETH:stEth=MockStETH",
    "scUSDCv2:asset=USDC",
    "scUSDCv2:weth=WETH",
    "scUSDCv2:scWETH=scWETHv2",
    "scUSDCv2:priceConverter=PriceConverter",
    "scUSDCv2:balancerVault=BalancerVault",
    "scUSDCv2:swapper=Swapper"
  ],
  "msg": "scUSDCv2 rules",
  "optimistic_loop": true,
  "smt_timeout": "7200",
  "disable_local_typechecking": false,
  "optimistic_fallback": true
}